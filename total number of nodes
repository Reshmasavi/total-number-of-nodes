from collections import deque

class TreeNode:
    def __init__(self, value=0, left=None, right=None):
        self.value = value
        self.left = left
        self.right = right

def count_nodes_recursive(root):
    if root is None:
        return 0
    return 1 + count_nodes_recursive(root.left) + count_nodes_recursive(root.right)

def count_nodes_iterative(root):
    if root is None:
        return 0
    
    count = 0
    queue = deque([root])
    
    while queue:
        node = queue.popleft()
        count += 1
        
        if node.left:
            queue.append(node.left)
        if node.right:
            queue.append(node.right)
    
    return count

# Example Usage
if __name__ == "__main__":
    # Creating a sample binary tree
    node4 = TreeNode(4)
    node5 = TreeNode(5)
    node2 = TreeNode(2, node4, node5)
    node3 = TreeNode(3)
    root = TreeNode(1, node2, node3)
  
    print("Recursive count:", count_nodes_recursive(root))  # Output will be 5
  
